{
	"info": {
		"_postman_id": "41775f3a-6644-4c8d-bd11-4fbe045a13a4",
		"name": "Study",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Manual",
			"item": [
				{
					"name": "CSV + JSON",
					"item": [
						{
							"name": "Register",
							"id": "e73faf9d-8859-4efa-839f-bb6892e64ac4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://reqres.in/api/register/"
							},
							"response": []
						}
					],
					"id": "5a2f4ea5-b5db-452a-ba02-6b42a530ea23"
				},
				{
					"name": "Test Collection 1",
					"item": [
						{
							"name": "List Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a8be0ad4-110b-42b6-a992-a0d7385d4099",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify than page equals 2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.page).to.eql(2);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "da9b5b29-ea3d-4998-8d3f-a7d520fda103",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users?page=2",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Registration",
							"id": "1796b5fa-52f5-4d35-b9c6-8986b1291942",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://reqres.in/api/register/"
							},
							"response": []
						},
						{
							"name": "Single User",
							"id": "1c891cf3-4f5a-424b-8938-447908632fce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{url}}api/users/2"
							},
							"response": []
						}
					],
					"id": "771e5636-4e9b-4f9a-b2e9-ee7914ed48e9"
				},
				{
					"name": "SOAP",
					"item": [
						{
							"name": "Untitled Request",
							"id": "d24e639d-6482-4f75-b4f8-655b9a44db94",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n    <Body>\r\n        <CapitalCity xmlns=\"http://www.oorsprong.org/websamples.countryinfo\">\r\n            <sCountryISOCode>RU</sCountryISOCode>\r\n        </CapitalCity>\r\n    </Body>\r\n</Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
									"protocol": "http",
									"host": [
										"webservices",
										"oorsprong",
										"org"
									],
									"path": [
										"websamples.countryinfo",
										"CountryInfoService.wso"
									],
									"query": [
										{
											"key": "WSDL",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "f4c5ba5b-52db-4970-b034-23cb4a2a2cc0"
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "http://users.bugred.ru/user/login/index.html",
							"id": "cbbd51b2-62d9-4591-9268-505288ed938c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "host",
										"value": "users.bugred.ru"
									},
									{
										"key": "proxy-connection",
										"value": "keep-alive"
									},
									{
										"key": "content-length",
										"value": "36"
									},
									{
										"key": "cache-control",
										"value": "max-age=0"
									},
									{
										"key": "origin",
										"value": "http://users.bugred.ru"
									},
									{
										"key": "dnt",
										"value": "1"
									},
									{
										"key": "upgrade-insecure-requests",
										"value": "1"
									},
									{
										"key": "content-type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 YaBrowser/23.1.5.708 Yowser/2.5 Safari/537.36"
									},
									{
										"key": "accept",
										"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
									},
									{
										"key": "referer",
										"value": "http://users.bugred.ru/user/login/index.html"
									},
									{
										"key": "accept-encoding",
										"value": "gzip, deflate"
									},
									{
										"key": "accept-language",
										"value": "ru,en;q=0.9"
									},
									{
										"key": "cookie",
										"value": "PHPSESSID=20472e437f8ada7b2101e60ccc04f9c6"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "login",
											"value": "test59359@mail.ru"
										},
										{
											"key": "password",
											"value": "1"
										}
									]
								},
								"url": "http://users.bugred.ru/user/login/index.html"
							},
							"response": []
						}
					],
					"id": "263de2b6-cd5d-485b-adf6-9403371795cc"
				},
				{
					"name": "Confluence",
					"item": [
						{
							"name": "doRegister",
							"id": "85506c26-64fb-428c-8e08-e8a0976a131f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test1234@mail.ru\",\r\n    \"name\": \"Алексей1\",\r\n    \"password\": \"test1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/doregister"
							},
							"response": []
						},
						{
							"name": "CreateCompany",
							"id": "452bc48b-0d92-4c7f-ab02-03de8a34d82f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"company_name\": \"Манго\",\r\n  \"company_type\": \"ООО\",\r\n  \"company_users\": [\"test123@mail.ru\", \"test1234@mail.ru\"],\r\n  \"email_owner\": \"test123@mail.ru\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/createcompany"
							},
							"response": []
						},
						{
							"name": "CreateUser",
							"id": "7897e405-49d4-44dd-a055-c4b086d164b3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"pochkavirta@mail.ru\",\r\n  \"name\": \"pochkavirta\",\r\n  \"tasks\": [10],\r\n  \"companies\": [1,50],\r\n  \"hobby\":\"Фильмы и игры\",\r\n  \"adres\":\"Москва\",\r\n  \"name1\":\"Алексей\",\r\n  \"surname1\":\"Голышкин\",\r\n  \"fathername1\":\"Максимович\",\r\n  \"cat\":\"Кузя\",\r\n  \"dog\":\"Кузя1\",\r\n  \"parrot\":\"Попугай\",\r\n  \"cavy\":\"Морская свинка\",\r\n  \"hamster\":\"Хомяк\",\r\n  \"squirrel\":\"Белка\",\r\n  \"phone\":\"+79995552244\",\r\n  \"inn\":\"123456789012\",\r\n  \"gender\":\"m\",\r\n  \"birthday\":\"11.01.1990\",\r\n  \"date_start\":\"01.04.2023\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/createuser"
							},
							"response": []
						},
						{
							"name": "CreateUserWithTasks",
							"id": "a334a66a-c6a8-4fae-8d07-51b0622d694a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"email\": \"pochkavirta@mail.com\",\r\n \"name\": \"pochkavirta1\",\r\n \"tasks\": [{\r\n   \"title\": \"Задача по тестированию\",\r\n   \"description\": \"Протестировать первую задачу\"\r\n  },\r\n  {\r\n   \"title\": \"Задача по тестированию\",\r\n   \"description\": \"Протестировать вторую задачу\"\r\n  }\r\n ],\r\n \"companies\": [1, 50],\r\n \"hobby\":\"Фильмы и игры\",\r\n  \"adres\":\"Москва\",\r\n  \"name1\":\"Алексей\",\r\n  \"surname1\":\"Голышкин\",\r\n  \"fathername1\":\"Максимович\",\r\n  \"cat\":\"Кузя\",\r\n  \"dog\":\"Кузя1\",\r\n  \"parrot\":\"Попугай\",\r\n  \"cavy\":\"Морская свинка\",\r\n  \"hamster\":\"Хомяк\",\r\n  \"squirrel\":\"Белка\",\r\n  \"phone\":\"+79995552244\",\r\n  \"inn\":\"123456789012\",\r\n  \"gender\":\"m\",\r\n  \"birthday\":\"11.01.1990\",\r\n  \"date_start\":\"01.04.2023\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/createuserwithtasks"
							},
							"response": []
						},
						{
							"name": "AddAvatar",
							"id": "7d597d56-1105-46b0-841b-3be5f67bc4ad",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "pochkavirta@mail.com",
											"type": "text"
										},
										{
											"key": "avatar",
											"type": "file",
											"src": "/C:/Users/golys/OneDrive/Рабочий стол/CHtobyi-CHto-byi.jpg"
										}
									]
								},
								"url": "http://users.bugred.ru/tasks/rest/addavatar"
							},
							"response": []
						},
						{
							"name": "DeleteAvatar",
							"id": "1abcdb51-2602-4f11-9932-98a748048bfd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "pochkavirta@mail.com",
											"type": "text"
										}
									]
								},
								"url": "http://users.bugred.ru/tasks/rest/deleteavatar"
							},
							"response": []
						},
						{
							"name": "MagicSearchName",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "155ed54b-6207-481f-b6c4-b6b76eaec60d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "91722e3c-9e5c-4d22-8eb9-ae67ab54963a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"query\":\"Голышкин\",\r\n\"partyType\":\"USER\",\r\n\"fullSimilarity\":\"True\",\r\n\"taskStatus\":\"ALL\",\r\n\"include\":\"ALL\",\r\n\"maxCount\":\"30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/magicsearch"
							},
							"response": []
						},
						{
							"name": "MagicSearchName1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "155ed54b-6207-481f-b6c4-b6b76eaec60d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1ab65e1c-e58d-4475-8a0b-06e8d1a00890",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"query\":\"Голышкин\",\r\n\"partyType\":\"USER\",\r\n\"fullSimilarity\":\"True\",\r\n\"taskStatus\":\"ALL\",\r\n\"include\":\"USER\",\r\n\"maxCount\":\"30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/magicsearch"
							},
							"response": []
						},
						{
							"name": "MagicSearchCompany",
							"id": "8916ef36-b2ea-4fa6-a078-6aa38a5833e8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"query\":\"Манго\",\r\n\"partyType\":\"COMPANY\",\r\n\"fullSimilarity\":\"True\",\r\n\"taskStatus\":\"ALL\",\r\n\"include\":\"ALL\",\r\n\"maxCount\":\"30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/magicsearch"
							},
							"response": []
						}
					],
					"id": "5055173d-652d-48de-99e7-0d4d337e97bd"
				}
			],
			"id": "ff484292-4ee4-48f7-b0c2-6e99252a18d6"
		},
		{
			"name": "Automation",
			"item": [
				{
					"name": "Lesson 1",
					"item": [
						{
							"name": "Регистрация пользователя",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08e2e740-c7b5-4936-a3ff-3bd3681b2519",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"/* Здесь было очень много текста,\r",
											"который поясняет, что идет далее в тесте\r",
											"чтобы в самом тесте сделать короткое название */\r",
											"pm.test(\"'Status code is 200' \\\r",
											"часть 2\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"console.log(pm.response);\r",
											"console.log(pm.response.code);\r",
											"\r",
											"console.log(pm.request);\r",
											"\r",
											"console.log(\"ПОСЛЕ запроса\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "22ff2ec6-2491-419c-b8ae-e3900ff0cb06",
										"exec": [
											"console.log(\"ДО запроса\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "58c86004-9ae3-4cb4-ac66-85e45bf6f9ad",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "test_demo_1@gmail.com",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Демо 1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": "http://users.bugred.ru/tasks/rest/doregister"
							},
							"response": []
						},
						{
							"name": "230 — никого не нашли по запросу, пустой ответ",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1a8ef91-4d05-460a-863a-c116645471ba",
										"exec": [
											"pm.test(\"Не нашло пользователя\", function () {\r",
											"    pm.response.to.have.status(230);\r",
											"});\r",
											"\r",
											"pm.test(\"Сломанный тест\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "94e96caf-7d94-4f72-9d99-141b63cbf74d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"query\":\"Голышкин1\",\r\n\"partyType\":\"USER\",\r\n\"fullSimilarity\":\"True\",\r\n\"taskStatus\":\"ALL\",\r\n\"include\":\"ALL\",\r\n\"maxCount\":\"30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/magicsearch"
							},
							"response": []
						},
						{
							"name": "231 - найден 1 юзер",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1a8ef91-4d05-460a-863a-c116645471ba",
										"exec": [
											"pm.test(\"Нашло пользователя\", function () {\r",
											"    pm.response.to.have.status(231);\r",
											"});\r",
											"\r",
											"pm.test(\"Сломанный тест\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "06436aa5-961e-463f-b87f-6d1a57dbae49",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"query\":\"Голышкин\",\r\n\"partyType\":\"USER\",\r\n\"fullSimilarity\":\"True\",\r\n\"taskStatus\":\"ALL\",\r\n\"include\":\"ALL\",\r\n\"maxCount\":\"30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/magicsearch"
							},
							"response": []
						},
						{
							"name": "232 — найдено больше 1 юзера (но без компаний)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1a8ef91-4d05-460a-863a-c116645471ba",
										"exec": [
											"pm.test(\"Нашло больше 1 пользователя\", function () {\r",
											"    pm.response.to.have.status(232);\r",
											"});\r",
											"\r",
											"pm.test(\"Сломанный тест\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "de0641d2-c6c9-4e50-ae1e-bb8e32cdfe6a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"query\":\"Алексей1\",\r\n\"partyType\":\"USER\",\r\n\"fullSimilarity\":\"False\",\r\n\"taskStatus\":\"ALL\",\r\n\"include\":\"ALL\",\r\n\"maxCount\":\"30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/magicsearch"
							},
							"response": []
						},
						{
							"name": "233 — найдена 1 компания",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "773234ec-ad6e-430a-a42f-a0bc81486114",
										"exec": [
											"pm.test(\"Нашло 1 компанию\", function () {\r",
											"    pm.response.to.have.status(233);\r",
											"});\r",
											"\r",
											"pm.test(\"Сломанный тест\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f7b6d7fa-8106-40be-92c9-e5ca2efa0c61",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"query\":\"Манго\",\r\n\"partyType\":\"COMPANY\",\r\n\"fullSimilarity\":\"True\",\r\n\"taskStatus\":\"ALL\",\r\n\"include\":\"ALL\",\r\n\"maxCount\":\"30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/magicsearch"
							},
							"response": []
						},
						{
							"name": "234 — найдено больше 1 компании (но без юзеров)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "773234ec-ad6e-430a-a42f-a0bc81486114",
										"exec": [
											"pm.test(\"Нашло больше 1 компании\", function () {\r",
											"    pm.response.to.have.status(234);\r",
											"});\r",
											"\r",
											"pm.test(\"Сломанный тест\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "40d34bb8-4aaa-43e6-9150-5b9fce5c6416",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"query\":\"Манго\",\r\n\"partyType\":\"COMPANY\",\r\n\"fullSimilarity\":\"True\",\r\n\"taskStatus\":\"ALL\",\r\n\"include\":\"ALL\",\r\n\"maxCount\":\"30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/magicsearch"
							},
							"response": []
						},
						{
							"name": "235 — найдены как юзеры, так и компании",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "773234ec-ad6e-430a-a42f-a0bc81486114",
										"exec": [
											"pm.test(\"Нашли пользователей и компании\", function () {\r",
											"    pm.response.to.have.status(235);\r",
											"});\r",
											"\r",
											"pm.test(\"Сломанный тест\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3ce29e24-c44b-4bdc-810d-4f91fd29086c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"query\":\"Unbranded Granite Table\",\r\n\"partyType\":\"ALL\",\r\n\"fullSimilarity\":\"False\",\r\n\"taskStatus\":\"ALL\",\r\n\"include\":\"ALL\",\r\n\"maxCount\":\"30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/magicsearch"
							},
							"response": []
						},
						{
							"name": "455 — не указан параметр query в запросе",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "773234ec-ad6e-430a-a42f-a0bc81486114",
										"exec": [
											"pm.test(\"Не указан query\", function () {\r",
											"    pm.response.to.have.status(455);\r",
											"});\r",
											"\r",
											"pm.test(\"Сломанный тест\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0392a9bd-344a-4c5b-bbe3-0e636a8b19d1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"partyType\":\"ALL\",\r\n\"fullSimilarity\":\"False\",\r\n\"taskStatus\":\"ALL\",\r\n\"include\":\"ALL\",\r\n\"maxCount\":\"30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/magicsearch"
							},
							"response": []
						},
						{
							"name": "456 — длина запроса выше 1000 символов",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1a8ef91-4d05-460a-863a-c116645471ba",
										"exec": [
											"pm.test(\"Длина запроса больше 1000 символов\", function () {\r",
											"    pm.response.to.have.status(456);\r",
											"});\r",
											"\r",
											"pm.test(\"Сломанный тест\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9b4feb2b-df90-480b-a1cb-234a8c49d16f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"query\":\"Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1Голышкин1\",\r\n\"partyType\":\"USER\",\r\n\"fullSimilarity\":\"True\",\r\n\"taskStatus\":\"ALL\",\r\n\"include\":\"ALL\",\r\n\"maxCount\":\"30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/magicsearch"
							},
							"response": []
						},
						{
							"name": "457 — неправильно задан partyType",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1a8ef91-4d05-460a-863a-c116645471ba",
										"exec": [
											"pm.test(\"Неверно указан partyType\", function () {\r",
											"    pm.response.to.have.status(457);\r",
											"});\r",
											"\r",
											"pm.test(\"Сломанный тест\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "489bec55-2382-40ca-8ab8-dc0a63a0bcd6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"query\":\"Голышкин1\",\r\n\"partyType\":\"USER1\",\r\n\"fullSimilarity\":\"True\",\r\n\"taskStatus\":\"ALL\",\r\n\"include\":\"ALL\",\r\n\"maxCount\":\"30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/magicsearch"
							},
							"response": []
						},
						{
							"name": "458 — неправильно задан параметр taskStatus",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1a8ef91-4d05-460a-863a-c116645471ba",
										"exec": [
											"pm.test(\"Неверно указан taskStatus\", function () {\r",
											"    pm.response.to.have.status(458);\r",
											"});\r",
											"\r",
											"pm.test(\"Сломанный тест\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "92a658a2-4027-4795-a8a0-b1bed1db5b0b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"query\":\"Голышкин1\",\r\n\"partyType\":\"USER\",\r\n\"fullSimilarity\":\"True\",\r\n\"taskStatus\":\"ALL1\",\r\n\"include\":\"ALL\",\r\n\"maxCount\":\"30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/magicsearch"
							},
							"response": []
						},
						{
							"name": "459 — неправильно задан параметр include",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1a8ef91-4d05-460a-863a-c116645471ba",
										"exec": [
											"pm.test(\"Неверно указан include\", function () {\r",
											"    pm.response.to.have.status(459);\r",
											"});\r",
											"\r",
											"pm.test(\"Сломанный тест\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6a74f0e3-f8dc-4163-b9b2-fa559a64f30e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"query\":\"Голышкин1\",\r\n\"partyType\":\"USER\",\r\n\"fullSimilarity\":\"True\",\r\n\"taskStatus\":\"ALL\",\r\n\"include\":\"ALL1\",\r\n\"maxCount\":\"30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/magicsearch"
							},
							"response": []
						}
					],
					"id": "ec9e8d05-1577-4fb7-bcb7-374bf337fece"
				},
				{
					"name": "Lesson 2",
					"item": [
						{
							"name": "Chai.js",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08e2e740-c7b5-4936-a3ff-3bd3681b2519",
										"exec": [
											"// SNIPPETS\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"// Test examples (Postman doc)\r",
											"pm.test(\"to.include для статус кода не сработает!\", function () {\r",
											"  pm.expect(pm.response.code).to.include(\"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.eql строка не равно число\", function () {\r",
											"  pm.expect(pm.response.code).to.eql(\"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.eql\", function () {\r",
											"  pm.expect(pm.response.code).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code через to.below\", function () {\r",
											"  pm.expect(pm.response.code).to.below(300);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code через to.above\", function () {\r",
											"  pm.expect(pm.response.code).to.above(100);\r",
											"});\r",
											"\r",
											"// Postman Sandbox API reference doc\r",
											"pm.test(\"Status code - info\", function () {\r",
											"  pm.response.to.be.info;\r",
											"});\r",
											"\r",
											"pm.test(\"Status code - success\", function () {\r",
											"  pm.response.to.be.success;\r",
											"});\r",
											"\r",
											"pm.test(\"Status code - ok\", function () {\r",
											"  pm.response.to.be.ok;\r",
											"});\r",
											"\r",
											"// Chai official doc\r",
											"pm.test(\"Status code is not 400\", function () {\r",
											"    pm.response.to.not.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.equal\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.deep.equal\", function () {\r",
											"  pm.expect(pm.response.code).to.deep.equal(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.equal неточное равенство\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(\"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.deep.equal неточное равенство\", function () {\r",
											"  pm.expect(pm.response.code).to.deep.equal(\"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.deep.include\", function () {\r",
											"  pm.expect(pm.response.code).to.deep.include(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.be.a string\", function () {\r",
											"  pm.expect(pm.response.code).to.be.a(\"string\");\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.be.a number\", function () {\r",
											"  pm.expect(pm.response.code).to.be.a(\"number\");\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.be.true\", function () {\r",
											"  pm.expect(pm.response.code === 200).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.be.false\", function () {\r",
											"  pm.expect(pm.response.code === 204).to.be.false;\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.be.ok\", function () {\r",
											"  pm.expect(pm.response.code === 200).to.be.ok;\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.not.be.ok\", function () {\r",
											"  pm.expect(pm.response.code === 400).to.not.be.ok;\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.be.null\", function () {\r",
											"  pm.expect(pm.response.code).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.not.be.null\", function () {\r",
											"  pm.expect(pm.response.code).to.not.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.not.be.undefined\", function () {\r",
											"  pm.expect(pm.response.code).to.not.be.undefined;\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.not.be.NaN\", function () {\r",
											"  pm.expect(pm.response.code).to.not.be.NaN;\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.be.exist\", function () {\r",
											"  pm.expect(pm.response.code).to.be.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.be.empty - не работает\", function () {\r",
											"  pm.expect(pm.response.code).to.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.be.at.least\", function () {\r",
											"  pm.expect(pm.response.code).to.be.at.least(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.be.at.most\", function () {\r",
											"  pm.expect(pm.response.code).to.be.at.most(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.be.at.within\", function () {\r",
											"  pm.expect(pm.response.code).to.be.at.within(100, 300);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code - число (instanceof)\", function () {\r",
											"  pm.expect(pm.response.code).to.be.an.instanceof(Number);\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.match\", function () {\r",
											"  pm.expect(pm.response.code).to.match(/^200/);\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.have.string\", function () {\r",
											"  pm.expect(pm.response.code).to.have.string(\"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.be.closeTo (x+-y)\", function () {\r",
											"  pm.expect(pm.response.code).to.be.closeTo(200, 1);\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через to.be.finite\", function () {\r",
											"  pm.expect(pm.response.code).to.be.finite;\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "22ff2ec6-2491-419c-b8ae-e3900ff0cb06",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "16ed2c23-d465-4d3a-b654-adb7f5a54981",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "test_demo_1@gmail.com",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Демо 1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": "http://users.bugred.ru/tasks/rest/doregister"
							},
							"response": []
						},
						{
							"name": "Node.js",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08e2e740-c7b5-4936-a3ff-3bd3681b2519",
										"exec": [
											"const assert = require('assert');\r",
											"\r",
											"pm.test(\"Тест через assert.ok\", function () {\r",
											"    assert.ok(pm.response.code === 200);\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через assert\", function () {\r",
											"    assert(pm.response.code === 200);\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через assert.deepEqual\", function () {\r",
											"    assert.deepEqual(pm.response.code, 200);\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через assert.deepStrictEqual\", function () {\r",
											"    assert.deepStrictEqual(pm.response.code, 200);\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через assert.deepEqual приведение типов\", function () {\r",
											"    assert.deepEqual(pm.response.code, \"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через assert.deepStrictEqual приведение типов\", function () {\r",
											"    assert.deepStrictEqual(pm.response.code, \"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через assert.equal\", function () {\r",
											"    assert.equal(pm.response.code, 200);\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через assert.strictEqual\", function () {\r",
											"    assert.strictEqual(pm.response.code, 200);\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через assert.equal приведение типов\", function () {\r",
											"    assert.equal(pm.response.code, \"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Тест через assert.strictEqual приведение типов\", function () {\r",
											"    assert.strictEqual(pm.response.code, \"200\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "22ff2ec6-2491-419c-b8ae-e3900ff0cb06",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "75339f29-d6f0-4799-aae3-e243137afa98",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "test_demo_1@gmail.com",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Демо 1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": "http://users.bugred.ru/tasks/rest/doregister"
							},
							"response": []
						},
						{
							"name": "JIRA: тестируем статус код после создания комментария и проверяем заголовок Content-Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d5d72d7a-a64a-4c4b-9bde-fdd5d99ecb91",
										"exec": [
											"pm.test(\"Статус: Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type: есть\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Ответ Content-Type: application/json;charset=UTF-8\", () => {\r",
											"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json;charset=UTF-8');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a84d7d67-bb0c-4919-8c55-cf85f7693729",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"password": "ATATT3xFfGF0V14aGvtOT5vTnbN9NJFQqPvbOcxGpKUDZc2zIkES8vmYhkrVghNpDgSjNmKzbfvOPM8xciApP0b42_z2dqYruAqBo1SYZ9UJIUJ4K6gXcg255LpXw0VbZqPGIrEMJpbe4s2HOBoeYk6ZlhqqgBzetDoAvdAktgaTNzGGYzw_wuk=A2B237C1",
										"username": "pochkavirta@gmail.com"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"body\": {\r\n    \"content\": [\r\n      {\r\n        \"content\": [\r\n          {\r\n            \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\",\r\n            \"type\": \"text\"\r\n          }\r\n        ],\r\n        \"type\": \"paragraph\"\r\n      }\r\n    ],\r\n    \"type\": \"doc\",\r\n    \"version\": 1\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://pochkavirta.atlassian.net/rest/api/3/issue/POCH-2/comment"
							},
							"response": []
						},
						{
							"name": "MagicSearch: проверяем наличие генерального в базе",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d5d72d7a-a64a-4c4b-9bde-fdd5d99ecb91",
										"exec": [
											"pm.test(\"Статус 231\", function () {\r",
											"    pm.response.to.have.status(231);\r",
											"});\r",
											"\r",
											"pm.test(\"Статус ОК\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2fd7c4cc-caaa-424b-9178-280d284830c4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"password": "ATATT3xFfGF06b6VvUUnvah4qpvtnYkwZ6TG5Klkwy47w56f0_QKXfUUIKsYEKyuaK1f8ZgSrKxsiUUWBitTHqSmUncHBPHrdBvt1U8CQA8GHTWRWPtMcjvx1OMjkYwLWc5W3Q_kqKjnBVtNU-3x4rYUBI7Up_FTHTgEhMLpsZIZrQ9Hg5sHbsI=BCA0BEB1",
										"username": "pochkavirta@gmail.com"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"query\":\"Лунатиков\",\r\n\"partyType\":\"USER\",\r\n\"fullSimilarity\":\"False\",\r\n\"taskStatus\":\"ALL\",\r\n\"include\":\"ALL\",\r\n\"maxCount\":\"30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://users.bugred.ru/tasks/rest/magicsearch"
							},
							"response": []
						}
					],
					"id": "5a126cdb-366b-4d32-84b2-8c6667fe70a7"
				},
				{
					"name": "Lesson 3",
					"item": [
						{
							"name": "Test body from snippet",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08e2e740-c7b5-4936-a3ff-3bd3681b2519",
										"exec": [
											"pm.test(\"Проверка ошибки\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    console.log(pm.response);\r",
											"    console.log(jsonData);\r",
											"    console.log(pm.response.json());\r",
											"    \r",
											"    pm.expect(jsonData.type).to.eql(\"error\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "22ff2ec6-2491-419c-b8ae-e3900ff0cb06",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "051fb7cf-44c8-4e0e-a3cc-abcc68247cc6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "test_demo_1@gmail.com",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Демо 1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": "http://users.bugred.ru/tasks/rest/doregister"
							},
							"response": []
						},
						{
							"name": "Test var, let, const",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08e2e740-c7b5-4936-a3ff-3bd3681b2519",
										"exec": [
											"const jsonData1 = pm.response.json();\r",
											"\r",
											"pm.test(\"const\", function () {\r",
											"    console.log(jsonData1);\r",
											"    pm.expect(jsonData1.type).to.eql(\"error\");\r",
											"});\r",
											"\r",
											"pm.test(\"var\", function () {\r",
											"    var jsonData2 = pm.response.json();\r",
											"    console.log(jsonData2);\r",
											"    pm.expect(jsonData2.type).to.eql(\"error\");\r",
											"});\r",
											"\r",
											"pm.test(\"let\", function () {\r",
											"    let jsonData3 = pm.response.json();\r",
											"    pm.expect(jsonData3.type).to.eql(\"error\");\r",
											"    console.log(jsonData3);\r",
											"});\r",
											"\r",
											"pm.test(\"noName\", function () {\r",
											"    jsonData4 = pm.response.json();\r",
											"    pm.expect(jsonData4.type).to.eql(\"error\");\r",
											"});\r",
											"console.log(jsonData4);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "22ff2ec6-2491-419c-b8ae-e3900ff0cb06",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6bb2b772-76c0-434d-bfdc-9ddc47cadd55",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "test_demo_1@gmail.com",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Демо 1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": "http://users.bugred.ru/tasks/rest/doregister"
							},
							"response": []
						},
						{
							"name": "Достать значение из простого JSON",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08e2e740-c7b5-4936-a3ff-3bd3681b2519",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"console.log(jsonData);\r",
											"\r",
											"console.log(jsonData.type);\r",
											"console.log(jsonData[\"type\"]);\r",
											"console.log(jsonData['type']);\r",
											"\r",
											"console.log(jsonData.message);\r",
											"console.log(jsonData[\"message\"]);\r",
											"console.log(jsonData['message']);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "22ff2ec6-2491-419c-b8ae-e3900ff0cb06",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "87ac5a07-1b38-42ce-b5c5-1895bd4446c9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "test_demo_1@gmail.com",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Демо 1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": "http://users.bugred.ru/tasks/rest/doregister"
							},
							"response": []
						},
						{
							"name": "Подсказки: JSON в ответе",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36ef4128-54be-463d-ae6a-5bda2c7cb830",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData);\r",
											"\r",
											"anna = jsonData.suggestions[0].value;\r",
											"console.log(anna);\r",
											"\r",
											"anna_gender = jsonData.suggestions[0].data.gender;\r",
											"anna_gender_1 = jsonData[\"suggestions\"][0][\"data\"][\"gender\"];\r",
											"anna_gender_2 = jsonData['suggestions'][0]['data']['gender'];\r",
											"\r",
											"console.log(anna_gender);\r",
											"console.log(anna_gender_1);\r",
											"console.log(anna_gender_2);\r",
											"\r",
											"pm.test(\"Анна первая, пыщ-пыщ!\", function () {\r",
											"    pm.expect(anna).to.eql(\"Анна\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3a7fcaa6-e017-429d-ac1f-697212966784",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "Token 120c0451489c05101534fd1d970d33c1c5550dee",
										"key": "Authorization"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"query\": \"Ан\",\r\n    \"gender\": \"FEMALE\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio"
							},
							"response": []
						},
						{
							"name": "Подсказки: XML в ответе",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36ef4128-54be-463d-ae6a-5bda2c7cb830",
										"exec": [
											"var jsonData = xml2Json(responseBody);\r",
											"console.log(jsonData);\r",
											"\r",
											"anna = jsonData.SuggestResponse.suggestions[0].value;\r",
											"console.log(anna);\r",
											"\r",
											"anna_gender = jsonData.SuggestResponse.suggestions[0].data.gender;\r",
											"anna_gender_1 = jsonData[\"SuggestResponse\"][\"suggestions\"][0][\"data\"][\"gender\"];\r",
											"anna_gender_2 = jsonData['SuggestResponse']['suggestions'][0]['data']['gender'];\r",
											"anna_gender_3 = jsonData['SuggestResponse'].suggestions[0][\"data\"]['gender'];\r",
											"\r",
											"console.log(anna_gender);\r",
											"console.log(anna_gender_1);\r",
											"console.log(anna_gender_2);\r",
											"console.log(anna_gender_3);\r",
											"\r",
											"pm.test(\"Анна первая, пыщ-пыщ!\", function () {\r",
											"    pm.expect(anna).to.eql(\"Анна\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5ef429b2-b974-4188-b474-90a9ca77faa1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "Token 120c0451489c05101534fd1d970d33c1c5550dee",
										"key": "Authorization"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"query\": \"Ан\",\r\n    \"gender\": \"FEMALE\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio"
							},
							"response": []
						},
						{
							"name": "Object.keys doRegister",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08e2e740-c7b5-4936-a3ff-3bd3681b2519",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"console.log(pm.response);\r",
											"//console.log(pm.response.headers[2].value);\r",
											"console.log(Object.keys(pm.response));\r",
											"console.log(Object.keys(pm.response.headers));\r",
											"console.log(pm.response.headers.members[2].value);\r",
											"\r",
											"pm.test(\"Проверка ошибки\", function () {    \r",
											"    pm.expect(pm.response.json().type).to.eql(\"error\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "22ff2ec6-2491-419c-b8ae-e3900ff0cb06",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "65aa5cbe-72d3-4380-827b-8336c3136bda",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "test_demo_1@gmail.com",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Демо 1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": "http://users.bugred.ru/tasks/rest/doregister"
							},
							"response": []
						},
						{
							"name": "Подсказки: найди Малахова!",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36ef4128-54be-463d-ae6a-5bda2c7cb830",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"malahov = jsonData.suggestions[2].data.surname;\r",
											"console.log(malahov);\r",
											"\r",
											"pm.test(\"Малахов фамилия\", function () {\r",
											"    pm.expect(malahov).to.eql(\"Малахов\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "770c5c50-d853-487c-a73a-4ceede277cdb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "Token 120c0451489c05101534fd1d970d33c1c5550dee",
										"key": "Authorization"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"query\": \"Андрей Мал\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio"
							},
							"response": []
						},
						{
							"name": "getuserfull",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e654fec-3dcb-41f6-a569-0a4a06e054ce",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"console.log(jsonData);\r",
											"\r",
											"console.log(jsonData.email);\r",
											"console.log(jsonData[\"name\"]);\r",
											"console.log(jsonData['password']);\r",
											"\r",
											"companyTwo = jsonData.companys[1].name;\r",
											"console.log(companyTwo);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2b4eee27-ce46-4798-b23f-e5af5cac3e96",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "test129@email.com",
											"type": "text"
										}
									]
								},
								"url": "http://users.bugred.ru/tasks/rest/getuserfull"
							},
							"response": []
						},
						{
							"name": "Reqres.in: найти «Charles»",
							"id": "34a31bed-45b1-4faa-ac38-b994b81963df",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users?page=2",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "627ce5b0-b45a-4bb3-a83a-5a2b17263123"
				},
				{
					"name": "doRegister",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08e2e740-c7b5-4936-a3ff-3bd3681b2519",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "22ff2ec6-2491-419c-b8ae-e3900ff0cb06",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "509e014f-c445-4765-b3e0-0b6d23166de1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "test_demo_1@gmail.com",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Демо 1",
									"type": "text"
								},
								{
									"key": "password",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": "http://users.bugred.ru/tasks/rest/doregister"
					},
					"response": []
				}
			],
			"id": "926a8645-a023-4a7c-96ea-1628b13e6f1f"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "8052d9d4-3203-4961-9c3e-18aa4c3cebdc",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "adf2f278-b224-4f6d-85be-5f3fb88386d0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "16ad8117-d5d6-471e-9660-dd320d212760",
			"key": "url",
			"value": "",
			"type": "string"
		}
	]
}